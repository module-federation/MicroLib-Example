{"version":3,"sources":["webpack://microlib-example/./src/lib/utils.js","webpack://microlib-example/./src/models/mixins.js"],"names":["compose","funcs","initVal","reduceRight","val","func","composeAsync","then","Promise","resolve","passwd","process","env","ENCRYPTION_PWD","algo","key","crypto","String","iv","Buffer","alloc","encrypt","text","cipher","encrypted","update","decrypt","cipherText","console","log","decipher","decrypted","hash","data","digest","uuid","nanoid","makeArray","v","Array","isArray","makeObject","prop","reduce","p","c","async","promise","result","ok","object","asObject","asArray","error","prevmodel","Symbol","validations","mixinType","pre","post","mixinSets","premixins","postmixins","processUpdate","model","changes","JSON","parse","stringify","updates","values","updated","updateMixins","type","o","name","cb","Error","mixinSet","Map","has","set","eventMask","create","onload","handleUpdateEvent","event","isUpdate","isObject","containsUpdates","changeList","Object","keys","length","every","k","util","validateModel","input","filter","sort","a","b","order","map","apply","output","enableValidation","onUpdate","enableEvent","onCreate","onCreateAndUpdate","onLoad","onAll","never","enabled","addValidation","config","some","parseKeys","propKeys","flat","RegExp","test","encryptProperties","encryptProps","obj","freezeProperties","preventUpdates","sideEffects","includes","requireProperties","requireProps","missing","hashPasswords","hashPwds","internalPropList","allowProperties","rejectUnknownProps","allowList","concat","unknownProps","rejectUnknownProperties","RegEx","email","ipv4Address","ipv6Address","phone","creditCard","ssn","expr","_expr","evaluateUniqueness","propVal","compareVal","unique","listSync","propKey","Validator","tests","isValid","regex","maxnum","maxlen","validateProperties","validate","invalid","updateProperties","updaters","updateProps","u","invokePort","fn","args","execMethod","functionType","string","createMethod","withValidFormat","checkFormat","value","x","encryptPersonalInfo","GlobalMixins"],"mappings":"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","file":"src_models_mixins_js.js","sourcesContent":["\"use strict\";\n\nimport crypto from \"crypto\";\nimport { nanoid } from \"nanoid\";\n\nexport function compose(...funcs) {\n  return function (initVal) {\n    return funcs.reduceRight((val, func) => func(val), initVal);\n  };\n}\n\nexport function composeAsync(...funcs) {\n  return function (initVal) {\n    return funcs.reduceRight(\n      (val, func) => val.then(func),\n      Promise.resolve(initVal)\n    );\n  };\n}\n\nconst passwd = process.env.ENCRYPTION_PWD;\nconst algo = \"aes-192-cbc\";\nconst key = crypto.scryptSync(String(passwd), \"salt\", 24);\nconst iv = Buffer.alloc(16, 0);\n\nexport function encrypt(text) {\n  const cipher = crypto.createCipheriv(algo, key, iv);\n  let encrypted = cipher.update(text, \"utf8\", \"hex\");\n  encrypted += cipher.final(\"hex\");\n  return encrypted;\n}\n\nexport function decrypt(cipherText) {\n  console.log(\"decrypt(%s)\", cipherText);\n  const decipher = crypto.createDecipheriv(algo, key, iv);\n  let decrypted = decipher.update(cipherText, \"hex\", \"utf8\");\n  decrypted += decipher.final(\"utf8\");\n  return decrypted;\n}\n\nexport function hash(data) {\n  return crypto.createHash(\"sha1\").update(data).digest(\"hex\");\n}\n\nexport function uuid() {\n  // return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>\n  //   (c ^ (crypto.randomBytes(16)[0] & (15 >> (c / 4)))).toString(16)\n  // );\n  return nanoid();\n}\n\nexport function makeArray(v) {\n  return Array.isArray(v) ? v : [v];\n}\n\nexport function makeObject(prop) {\n  if (Array.isArray(prop)) {\n    return prop.reduce((p, c) => ({ ...p, ...c }));\n  }\n  return prop;\n}\n\n/**\n *\n * @param {Promise<{\n * ok:()=>any,\n *\n * }} promise\n * @returns\n */\nexport function async(promise) {\n  return promise\n    .then(result => ({\n      ok: true,\n      object: result,\n      asObject: () => makeObject(result),\n      asArray: () => makeArray(result),\n    }))\n    .catch(error => {\n      console.error(error);\n      return Promise.resolve({ ok: false, error });\n    });\n}\n","\"use strict\";\n\nimport { hash, encrypt, decrypt, compose } from \"../lib/utils\";\nimport util from \"util\";\n\n/**\n * Functional mixin created by `functionalMixinFactory`\n * @callback functionalMixin\n * @param {Object} o Object to compose\n * @returns {Object} Composed object\n */\n\n/**\n * Functional mixin factory - partial application - returns mixin function\n * @callback functionalMixinFactory\n * @param {*} mixinParams params for mixin function\n * @returns {functionalMixin}\n */\n\n/**\n * @typedef {import(\"../models/index\").Model} Model\n */\n\n/**\n * Private key to access previous version of the model\n */\nexport const prevmodel = Symbol(\"prevModel\");\n/**\n * private key to access validation config\n */\nexport const validations = Symbol(\"validations\");\n/**\n * Process mixin pre or post update\n */\nexport const mixinType = {\n  pre: Symbol(\"pre\"),\n  post: Symbol(\"post\"),\n};\n\n/**\n * Stored mixins - use private symbol as key to prevent overwrite\n */\nexport const mixinSets = {\n  [mixinType.pre]: Symbol(\"preUpdateMixins\"),\n  [mixinType.post]: Symbol(\"postUpdateMixins\"),\n};\n\n/**\n * Set of pre mixins\n */\nconst premixins = mixinSets[mixinType.pre];\n/**\n * Set of post mixins\n */\nconst postmixins = mixinSets[mixinType.post];\n\n/**\n * Apply any pre and post mixins and return the result.\n * @deprecated\n * @param {*} model - current model\n * @param {*} changes - object containing changes\n * @returns {import('.').Model} updated model\n */\nexport function processUpdate(model, changes) {\n  changes[prevmodel] = JSON.parse(JSON.stringify(model)); // keep history\n\n  const updates = model[premixins]\n    ? compose(...model[premixins].values())(changes)\n    : changes;\n\n  const updated = { ...model, ...updates };\n\n  return model[postmixins]\n    ? compose(...model[postmixins].values())(updated)\n    : updated;\n}\n\n/**\n * @deprecated\n * Store mixins for execution on update\n * @param {mixinType} type\n * run before changes are applied or afterward\n * @param {*} o  Object containing changes to apply (pre)\n * or new object after changes have been applied (post)\n * @param {string} name `Function.name`\n * @param {functionalMixin} cb mixin function\n */\nexport function updateMixins(type, o, name, cb) {\n  if (!mixinSets[type]) {\n    throw new Error(\"invalid mixin type\");\n  }\n\n  const mixinSet = o[mixinSets[type]] || new Map();\n\n  if (!mixinSet.has(name)) {\n    mixinSet.set(name, cb());\n\n    return {\n      ...o,\n      [mixinSets[type]]: mixinSet,\n    };\n  }\n  return o;\n}\n\n/**\n * bitmask for identifying events\n */\nconst eventMask = {\n  update: 1, //  0001 Update\n  create: 1 << 1, //  0010 Create\n  onload: 1 << 2, //  0100 Load\n};\n\nfunction handleUpdateEvent(model, updates, event) {\n  const isUpdate = eventMask.update & event;\n  const decrypted = isUpdate ? model.decrypt() : {};\n  return {\n    ...model,\n    ...updates,\n    ...decrypted,\n  };\n}\n\nfunction isObject(p) {\n  return p != null && typeof p === \"object\";\n}\n\nfunction containsUpdates(model, changes, event) {\n  if (eventMask.update & event) {\n    const changeList = Object.keys(changes);\n    if (changeList.length < 1) return false;\n\n    if (\n      changeList.every(\n        k => model[k] && util.isDeepStrictEqual(changes[k], model[k])\n      )\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Run validation functions enabled for a given event.\n * @param {Model} model - the composed object\n * @param {*} changes - object containing changes\n * @param {Number} event - Indicates what event is occuring:\n * 1st bit turned on means update, 2nd bit create, 3rd load,\n * see `eventMask`.\n */\nexport function validateModel(model, changes, event) {\n  // if there are no changes, and the event is an update, return\n  if (!containsUpdates(model, changes, event)) {\n    return model;\n  }\n\n  // keep a history of the last saved model\n  const input = { ...changes, [prevmodel]: JSON.parse(JSON.stringify(model)) };\n\n  // Validate just the input data\n  const updates = model[validations]\n    .filter(v => v.input & event)\n    .sort((a, b) => a.order - b.order)\n    .map(v => model[v.name].apply(input))\n    .reduce((p, c) => ({ ...p, ...c }), input);\n\n  const updated = { ...model, ...updates };\n\n  // Validate the updated model\n  return updated[validations]\n    .filter(v => v.output & event)\n    .sort((a, b) => a.order - b.order)\n    .map(v => updated[v.name]())\n    .reduce((p, c) => ({ ...p, ...c }), updated);\n}\n\n/**\n * Specify when validations run.\n */\nconst enableValidation = (() => {\n  const onUpdate = enableEvent(true, false, false);\n  const onCreate = enableEvent(false, true, false);\n  const onCreateAndUpdate = enableEvent(true, true, false);\n  const onLoad = enableEvent(false, false, true);\n  const onAll = enableEvent(true, true, true);\n  const never = enableEvent(false, false, false);\n  return {\n    /**\n     * Validation runs on update.\n     */\n    onUpdate,\n    /**\n     * Validation runs on create.\n     */\n    onCreate,\n    /**\n     * Validation runs on both create and update.\n     */\n    onCreateAndUpdate,\n    /**\n     * Validation runs on load.\n     */\n    onLoad,\n    /**\n     * Validation runs on all events.\n     */\n    onAll,\n    /**\n     * Validation runs on zero events (disabled).\n     */\n    never,\n  };\n})();\n\n/**\n * Enable validation to run on specific events.\n * @param {boolean} onUpdate - whether or not to run the validation on update.\n * Defaults to `true`.\n * @param {boolean} onCreate - whether or not to run the validation on create.\n * Defaults to `true`.\n * @param {boolean} onLoad - whether or not to run the validation when\n * the object is being loaded into memory after being deserialized.\n * Defaults to `false`.\n */\nfunction enableEvent(onUpdate = true, onCreate = true, onLoad = false) {\n  let enabled = 0;\n\n  if (onUpdate) {\n    enabled |= eventMask.update;\n  }\n  if (onCreate) {\n    enabled |= eventMask.create;\n  }\n  if (onLoad) {\n    enabled |= eventMask.onload;\n  }\n  return enabled;\n}\n\n/**\n * Add a validation function to be called for a given event.\n * @typedef {object} validationConfig\n * @property {*} o - the composed object\n * @property {string} name - name of function to run\n * @property {number} input - \"input\" validations run against\n * the data passed by the caller in the request. Use `enableValidation`\n * to provide a value for this param.\n * @property {number} output - \"output\" functions run against the\n * model after the changes have been applied.\n * @property {number} order - order in which validation runs\n * @param {validationConfig} param0\n */\nfunction addValidation({ model, name, input = 0, output = 0, order = 50 }) {\n  const config = model[validations] || [];\n\n  if (config.some(v => v.name === name)) {\n    return model;\n  }\n\n  return {\n    ...model,\n    validateModel,\n    [validations]: [...config, { name, input, output, order }],\n  };\n}\n\n/**\n * Resolve keys:\n * If the value includes an array, flatten it, then for each element:\n * If the value is \"*\", return all keys of the object.\n * If the value is a function, execute it to get a dynamic key or key list.\n * If the value is a RegExp, test it to get dynamic key list.\n * If any of the above produce an array of keys, flatten it.\n * @param {*} o - Object to compose\n * @param  {Array<string | function(*):string>} propKeys -\n * Names (or functions that return names) of properties\n * @returns {string[]} list of (resolved) property keys\n */\nfunction parseKeys(o, ...propKeys) {\n  const keys = propKeys.flat().map(function (k) {\n    if (typeof k === \"function\") return k(o);\n    if (k instanceof RegExp) return Object.keys(o).filter(key => k.test(key));\n    if (k === \"*\") return Object.keys(o);\n    return k;\n  });\n  return keys.flat();\n}\n\n/**\n * Encrypt properties. Properties remain encrypted indefinitely, and\n * must be explicitly decrypted as needed, e.g. reading values in memory,\n * from storage, serializing and sending to an external system.\n * @param  {Array<string | function(*):string>} propKeys -\n * Names (or functions that return names) of properties to encrypt\n * @returns {functionalMixin} mixin function\n */\nexport const encryptProperties = (...propKeys) => o => {\n  const keys = parseKeys(o, ...propKeys);\n\n  const encryptProps = obj => {\n    return keys\n      .map(key => (obj[key] ? { [key]: encrypt(obj[key]) } : {}))\n      .reduce((p, c) => ({ ...p, ...c }));\n  };\n\n  return {\n    encryptProperties() {\n      return encryptProps(this);\n    },\n\n    ...addValidation({\n      model: o,\n      name: encryptProperties.name,\n      input: enableValidation.onUpdate,\n      output: enableValidation.onCreate,\n      order: 99,\n    }),\n\n    decrypt() {\n      return keys\n        .map(key => (this[key] ? { [key]: decrypt(this[key]) } : {}))\n        .reduce((p, c) => ({ ...p, ...c }));\n    },\n  };\n};\n\n/**\n * Prevent properties from being modified.\n * Accepts a property name or a function that returns a property name.\n * @param  {Array<string | function(*):string | RegExp>} propKeys - names of properties to freeze\n */\nexport const freezeProperties = (...propKeys) => o => {\n  const preventUpdates = obj => {\n    const keys = parseKeys(obj, ...propKeys);\n\n    const sideEffects = Object.keys(obj).filter(key => keys.includes(key));\n    if (sideEffects?.length > 0) {\n      throw new Error(`cannot update readonly properties: ${sideEffects}`);\n    }\n  };\n\n  return {\n    freezeProperties() {\n      preventUpdates(this);\n    },\n\n    ...addValidation({\n      model: o,\n      name: freezeProperties.name,\n      input: enableValidation.onUpdate,\n      order: 20,\n    }),\n  };\n};\n\n/**\n * Enforce required fields.\n * @param {Array<string | function(*):string | RegExp>} propKeys -\n * required property key names - can be a function or regex\n * that returns the property key names\n */\nexport const requireProperties = (...propKeys) => o => {\n  const keys = parseKeys(o, ...propKeys);\n\n  function requireProps(obj) {\n    const missing = keys.filter(key => key && !obj[key]);\n    if (missing?.length > 0) {\n      throw new Error(`missing required properties: ${missing}`);\n    }\n  }\n  return {\n    requireProperties() {\n      requireProps(this);\n    },\n\n    ...addValidation({\n      model: o,\n      name: requireProperties.name,\n      output: enableValidation.onCreateAndUpdate,\n      order: 75,\n    }),\n  };\n};\n\n/**\n * Hash passwords.\n * @param {*} hash hash algorithm\n * @param  {Array<string | function(*):string | RegExp>} propKeys name of password props\n */\nexport const hashPasswords = (...propKeys) => o => {\n  const keys = parseKeys(o, ...propKeys);\n\n  function hashPwds(obj) {\n    return keys\n      .map(key => (obj[key] ? { [key]: hash(obj[key]) } : {}))\n      .reduce((p, c) => ({ ...p, ...c }));\n  }\n\n  return {\n    hashPasswords() {\n      return hashPwds(this);\n    },\n\n    ...addValidation({\n      model: o,\n      name: hashPasswords.name,\n      input: enableValidation.onUpdate,\n      output: enableValidation.onCreate,\n      order: 80,\n    }),\n  };\n};\n\nconst internalPropList = [];\n\n/**\n * Reject unknown properties in user input. Allow only approved keys.\n * @param  {...any} propKeys\n */\nexport const allowProperties = (...propKeys) => o => {\n  function rejectUnknownProps() {\n    const keys = parseKeys(o, ...propKeys);\n\n    const allowList = keys.concat(internalPropList);\n    const unknownProps = Object.keys(o).filter(key => !allowList.includes(key));\n\n    if (unknownProps?.length > 0) {\n      throw new Error(`invalid properties: ${unknownProps}`);\n    }\n  }\n\n  return {\n    rejectUnknownProperties() {\n      return rejectUnknownProps(this);\n    },\n\n    ...addValidation({\n      model: o,\n      name: \"rejectUnknownProperties\",\n      input: enableValidation.onUpdate,\n      order: 15,\n    }),\n  };\n};\n\n/**\n * Test regular expressions\n */\nexport const RegEx = {\n  email: /^(.+)@(.+){2,}\\.(.+){2,}$/,\n  ipv4Address: /^([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])$/,\n  ipv6Address: /^((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*::((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*|((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4})){7}$/,\n  phone: /^[1-9]\\d{2}-\\d{3}-\\d{4}/,\n  creditCard: /^(?:4[0-9]{12}(?:[0-9]{3})?|[25][1-7][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/,\n  ssn: /^(?!666|000|9\\\\d{2})\\\\d{3}-(?!00)\\\\d{2}-(?!0{4})\\\\d{4}$/,\n  /**\n   * Allow caller to pass a keyword that refers to one of the regex above\n   * @param {regexType} expr\n   * @param {*} val\n   */\n  test(expr, val) {\n    const _expr =\n      Object.keys(this).includes(expr) && this[expr] instanceof RegExp\n        ? this[expr]\n        : expr;\n    return _expr.test(val);\n  },\n};\n\n/**\n * @callback isValid\n * @param {Object} o - the property owner\n * @param {*} propVal - the property value\n * @returns {boolean} - true if valid\n *\n * @typedef {'email'|'phone'|'ipv4Address'|'ipv6Address'|'creditCard'|'ssn'|RegExp} regexType\n *\n * @typedef {{\n *  propKey:string,\n *  isValid?:isValid,\n *  values?:any[],\n *  regex?:regexType,\n *  maxlen?:number\n *  maxnum?:number\n *  typeof?:string\n *  unique?:{ encrypted:boolean }\n * }} validation\n */\n\nfunction evaluateUniqueness(v, o, propVal) {\n  const compareVal = v.unique.encrypted ? encrypt(propVal) : propVal;\n  return o.listSync({ [v.propKey]: compareVal }).length < 1;\n}\n\n/**\n * Run validation tests\n */\nconst Validator = {\n  tests: {\n    isValid: (v, o, propVal) => v.isValid(o, propVal),\n    values: (v, o, propVal) => v.values.includes(propVal),\n    regex: (v, o, propVal) => RegEx.test(v.regex, propVal),\n    typeof: (v, o, propVal) => v.typeof === typeof propVal,\n    maxnum: (v, o, propVal) => v.maxnum + 1 > propVal,\n    maxlen: (v, o, propVal) => v.maxlen + 1 > propVal.length,\n    unique: (v, o, propVal) => evaluateUniqueness(v, o, propVal),\n  },\n  /**\n   * Returns true if tests pass.\n   * @param {validation} v validation config\n   * @param {Object} o object to compose\n   * @param {*} propVal value of property to validate\n   * @returns {boolean} true if tests pass\n   */\n  isValid(v, o, propVal) {\n    return Object.keys(this.tests).every(key => {\n      if (v[key]) {\n        // the test `key` is specified, run it\n        return this.tests[key](v, o, propVal);\n      }\n      return true;\n    });\n  },\n};\n\n/**\n * Verify a property value is a member of a list,\n * is unique within a set of model instances,\n * is of a certain length, size or type,\n * matches a regular expression,\n * or satisfies a custom validation function.\n * @param {validation[]} validations\n */\nexport const validateProperties = validations => o => {\n  function validate(obj) {\n    const invalid = validations.filter(v => {\n      const propVal = obj[v.propKey];\n\n      if (!propVal) {\n        return false;\n      }\n      return !Validator.isValid(v, obj, propVal);\n    });\n\n    if (invalid?.length > 0) {\n      throw new Error(`invalid value for ${[...invalid.map(v => v.propKey)]}`);\n    }\n  }\n\n  return {\n    validateProperties() {\n      validate(this);\n    },\n\n    ...addValidation({\n      model: o,\n      name: validateProperties.name,\n      input: enableValidation.onUpdate,\n      output: enableValidation.onCreate,\n      order: 90,\n    }),\n  };\n};\n\n/**\n * @callback updaterFn\n * @param {Object} o\n * @param  {*} propVal\n * @returns {Object} object with updated properties\n *\n * @typedef {{\n * propKey: string,\n * update: updaterFn\n * }} updater\n */\n\n/**\n * Respond to property updates by updating addtional (dependent) properties as needed.\n * @param {updater[]} updaters\n */\nexport const updateProperties = updaters => o => {\n  function updateProps(obj) {\n    const updates = updaters.filter(u => obj[u.propKey]);\n\n    if (updates?.length > 0) {\n      return updates\n        .map(u => u.update(o, obj[u.propKey]))\n        .reduce((p, c) => ({ ...p, ...c }));\n    }\n  }\n\n  return {\n    updateProperties() {\n      return updateProps(this);\n    },\n\n    ...addValidation({\n      model: o,\n      name: updateProperties.name,\n      input: enableValidation.onUpdate,\n      order: 35,\n    }),\n  };\n};\n\n/**\n * Set a validation that invokes a port. The port must be configured\n * in the `ModelSpecification`.\n * @param {string} fn - name of port (as it appears in the ModelSpec)\n * @param {boolean} onCreate - invoke on create\n * @param {boolean} onUpdate - invoke on update\n * @param  {...any} args - pass arguments\n */\nexport const invokePort = (fn, onCreate, onUpdate, ...args) => async o => {\n  return {\n    ...o,\n    invokePort() {\n      console.log({ func: \"invokePort\", fn, args });\n      return this[fn](...args).then(o => o);\n    },\n\n    ...addValidation({\n      model: o,\n      name: \"invokePort\",\n      output: enableValidation.onUpdate,\n      order: 85,\n    }),\n  };\n};\n\n/**\n * Set a validation that calls a model method or provided function.\n * @param {string|function(Model, ...any):Promise<any>} fn - callback function\n * or name of method to executee\n * @param {boolean} onCreate - invoke on create\n * @param {boolean} onUpdate - invoke on update\n * @param  {...any} args - pass arguments to the method/function\n * @return {Model}\n */\nexport const execMethod = (fn, onCreate, onUpdate, ...args) => async o => {\n  const functionType = {\n    function: (fn, obj, ...args) => fn(obj, ...args).then(o => o),\n    string: (fn, obj, ...args) => obj[fn](...args).then(o => o),\n  };\n\n  return {\n    ...o,\n    async execMethod() {\n      const model = await functionType[typeof fn](fn, this, ...args);\n      return model;\n    },\n\n    ...addValidation({\n      model: o,\n      name: \"execMethod\",\n      output: enableValidation.onUpdate,\n      order: 40,\n    }),\n  };\n};\n\n/**\n * Create a method on a model.\n * @param {*} fn\n * @param  {...any} args\n */\nexport const createMethod = (fn, ...args) => o => {\n  return {\n    ...o,\n    [fn.name]: () => fn(...args),\n  };\n};\n\n/**\n * Check the value of the property before returning its key.\n * @param {*} propKey\n * @param {regexType} expr\n * @returns {function(any):any} dynamic property func\n */\nexport const withValidFormat = (propKey, expr) => o => {\n  if (o[propKey] && !RegEx.test(expr, o[propKey])) {\n    throw new Error(`invalid ${propKey}`);\n  }\n  return propKey;\n};\n\n/**\n *\n * @param {string} value\n * @param {regexType} expr\n */\nexport const checkFormat = (value, expr) => {\n  if (value && !RegEx.test(expr, value)) {\n    const x = expr instanceof RegExp ? value : expr;\n    throw new Error(`${x} invalid`);\n  }\n};\n\n/**\n * Implement GDPR encryption requirement across models\n */\nexport const encryptPersonalInfo = encryptProperties(\n  /^last.*Name$|^surname$|^family.*Name$/i,\n  /^shipping.*Address$/i,\n  /^billing.*Address$/i,\n  /^home.*Address$/i,\n  /email|e-mail/i,\n  /^phone$|^home.*phone$/i,\n  /^mobile$|^mobile.*number$|^cell.*number$/i,\n  /^credit.*Card/i,\n  /^cvv$/i,\n  /^ssn$|^socialSecurity/i,\n  /^encrypted/i\n);\n\n/**\n * Global mixins\n */\nconst GlobalMixins = [encryptPersonalInfo];\n\nexport default GlobalMixins;\n"],"sourceRoot":""}