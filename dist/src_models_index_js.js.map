{"version":3,"sources":["webpack://microlib-example/./src/config/customer.js","webpack://microlib-example/./src/config/index.js","webpack://microlib-example/./src/config/product.js","webpack://microlib-example/./src/datasources/datasource-mongodb.js","webpack://microlib-example/./src/event-dispatcher.js","webpack://microlib-example/./src/lib/utils.js","webpack://microlib-example/./src/models/customer.js","webpack://microlib-example/./src/models/index.js","webpack://microlib-example/./src/models/make-adapters.js","webpack://microlib-example/./src/models/mixins.js","webpack://microlib-example/./src/service-registry.js","webpack://microlib-example/./src/services-mock/address-service.js","webpack://microlib-example/./src/services-mock/event-service.js","webpack://microlib-example/./src/services-mock/index.js","webpack://microlib-example/./src/services-mock/inventory-service.js","webpack://microlib-example/./src/services-mock/payment-service.js","webpack://microlib-example/./src/services-mock/shipping-service.js"],"names":["Customer","modelName","endpoint","dependencies","uuid","factory","makeCustomerFactory","validate","validateModel","onDelete","okToDelete","mixins","freezeProperties","requireProperties","validateProperties","propKey","unique","encrypted","regex","relations","orders","type","foreignKey","commands","decrypt","command","acl","accessControlList","customer","allow","desc","Product","a","b","DataSourceAdapterMongoDb","url","cacheSize","DataSourceMongoDb","DataSourceMongoDbCustom","datasource","name","EventDispatcher","adapter","Event","subscriptions","Map","topic","callback","has","get","push","set","message","method","emitEvent","forEach","bind","compose","funcs","initVal","reduceRight","val","func","composeAsync","then","Promise","resolve","passwd","process","env","ENCRYPTION_PWD","algo","key","crypto","String","iv","Buffer","alloc","encrypt","text","cipher","update","cipherText","console","log","decipher","decrypted","hash","data","digest","replace","c","toString","makeArray","v","Array","isArray","makeObject","prop","reduce","p","async","promise","result","ok","object","asObject","asArray","error","createCustomer","firstName","lastName","shippingAddress","creditCardNumber","billingAddress","phone","email","userId","Object","freeze","customerId","length","requiredProps","validateSpec","spec","missing","filter","Error","entries","makeModel","concat","GlobalMixins","makeAdapters","ports","adapters","services","models","values","modelSpecs","map","keys","port","service","e","warn","prevmodel","Symbol","validations","mixinType","pre","post","mixinSets","premixins","postmixins","processUpdate","model","changes","JSON","parse","stringify","updates","updated","updateMixins","o","cb","mixinSet","eventMask","create","onload","handleUpdateEvent","event","isUpdate","isObject","containsUpdates","changeList","every","k","util","input","sort","order","apply","output","enableValidation","onUpdate","enableEvent","onCreate","onCreateAndUpdate","onLoad","onAll","never","enabled","addValidation","config","some","parseKeys","propKeys","flat","RegExp","test","encryptProperties","encryptProps","obj","preventUpdates","sideEffects","includes","requireProps","hashPasswords","hashPwds","internalPropList","allowProperties","rejectUnknownProps","allowList","unknownProps","rejectUnknownProperties","RegEx","ipv4Address","ipv6Address","creditCard","ssn","expr","_expr","evaluateUniqueness","propVal","compareVal","listSync","Validator","tests","isValid","maxnum","maxlen","invalid","updateProperties","updaters","updateProps","u","invokePort","fn","args","execMethod","functionType","string","createMethod","withValidFormat","checkFormat","value","x","encryptPersonalInfo","Registry","eventNames","shipOrder","trackShipment","verifyDelivery","sendEvent","eventData","eventSource","eventName","setTimeout","eventTime","Date","toUTCString","eventType","generateShippingEventData","externalId","trackingId","shipmentId","proofOfDelivery","trackingStatus","generateShippingMessage","commandResp","inventoryCallbackFactory","inventoryCallback","warehouseAddress","commandArgs","replyChannel","warehouse_addr","shippingCallbackFactory","shippingCallback","_message","dispatcher","registerCallback","Address","validateAddress","address","shippingChannel","inventoryChannel","callbacks","responses","topics","handleEvents","req","res","body","topicName","find","msg","code","response","send","listening","listen","notify","init","Inventory","pickOrder","lineItems","pickupAddress","Payment","authorizePayment","id","amount","source_id","customer_id","autocomplete","currency","payload","idempotency_key","amount_money","location_id","reference_id","note","app_fee_money","completePayment","orderNo","refundPayment","createEventMessage","requester","eventTarget","getTime","eventUuid","createCommandEvent","commandName","Shipping","serviceName","shipTo","shipFrom","signature","respondOn","returnShipment","getPayload","payloads","getProperty"],"mappings":"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mB;AAInBE,sBAAgB,EAAhBA,gBAJmB;AAKnBD,qBAAe,EAAfA,eALmB;AAMnBE,oBAAc,EAAdA,cANmB;AAOnBC,WAAK,EAALA,KAPmB;AAQnBC,WAAK,EAALA,KARmB;AASnBC,YAAM,EAANA;AATmB,KAAd,CAAP;AAWD,GArBD;AAsBD;AAEM,SAAe3G,UAAtB;AAAA;AAAA;;;wEAAO,iBAA0BkB,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEkBA,QAAQ,CAACR,MAAT,EAFlB;;AAAA;AAEGA,kBAFH;AAAA,6CAGIA,MAAM,CAACqG,MAAP,GAAgB,CAHpB;;AAAA;AAAA;AAAA;AAKHtC,mBAAO,CAACyB,KAAR,CAAc;AAAE9C,kBAAI,EAAEpD,UAAU,CAAC8B,IAAnB;AAAyBoE,mBAAK;AAA9B,aAAd;AALG,6CAMI,IANJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BM;AAEb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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UdC,4BAAY,EAAE,QAVA;AAWdC,oBAAI,EAAE,mBAXQ;AAYdC,6BAAa,EAAE;AACbX,wBAAM,EAAE,EADK;AAEbI,0BAAQ,EAAE;AAFG;AAZD,eAFhB;AAmBA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAxDI,+CA8DO,MA9DP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+DD,GAhFoB;;AAkFrB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEQQ,iBA1Je,2BA0JCvK,KA1JD,EA0JQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAC3BxE,qBAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CuE,KAAK,CAACwK,OAAjD;AAD2B,gDAEpB,MAFoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAG5B,GA7JoB;AA+JfC,eA/Je,yBA+JDzK,KA/JC,EA+JM;AAAA;AAAA;AAAA;AAAA;AAAA;AACzBxE,qBAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CuE,KAAK,CAACwK,OAAhD;;AADyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAE1B;AAjKoB,CAAhB,C;;;;;;;;;;;;;;;;;;;AC1BM;AAEb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","file":"src_models_index_js.js","sourcesContent":["\"use strict\";\n\nimport {\n  validateModel,\n  freezeProperties,\n  validateProperties,\n  requireProperties,\n} from \"../models/mixins\";\nimport { uuid } from \"../lib/utils\";\nimport { makeCustomerFactory, okToDelete } from \"../models/customer\";\nimport { DataSourceAdapterMongoDb } from \"../datasources/datasource-mongodb\";\n\n/**\n * @type {import('../models/index').ModelSpecification}\n */\nexport const Customer = {\n  modelName: \"customer\",\n  endpoint: \"customers\",\n  dependencies: { uuid },\n  factory: makeCustomerFactory,\n  validate: validateModel,\n  onDelete: okToDelete,\n  // datasource: {\n  //   factory: DataSourceAdapterMongoDb,\n  //   url: \"mongodb://localhost:27017\",\n  //   cacheSize: 2000,\n  //   baseClass: \"DataSourceMongoDb\",\n  // },\n  mixins: [\n    freezeProperties(\"customerId\"),\n    requireProperties(\n      \"firstName\",\n      \"lastName\",\n      \"email\",\n      \"shippingAddress\",\n      \"billingAddress\",\n      \"creditCardNumber\"\n    ),\n    validateProperties([\n      {\n        propKey: \"email\",\n        unique: { encrypted: true },\n        regex: \"email\",\n      },\n      {\n        propKey: \"creditCardNumber\",\n        regex: \"creditCard\",\n      },\n    ]),\n  ],\n  relations: {\n    orders: {\n      modelName: \"order\",\n      type: \"oneToMany\",\n      foreignKey: \"customerId\",\n    },\n  },\n  commands: {\n    decrypt: {\n      command: \"decrypt\",\n      acl: [\"read\", \"decrypt\"],\n    },\n  },\n  accessControlList: {\n    customer: {\n      allow: \"read\",\n      type: \"relation\",\n      desc: \"Allow orders to see customers.\",\n    },\n  },\n};\n","// export * from \"./order\";\n// export * from \"./user\";\nexport * from \"./customer\";\nexport * from \"./product\";\n","export const Product = {\n  factory: () => a => ({ a, b: \"valb\" }),\n  modelName: \"product\",\n  endpoint: \"products\",\n};\n","\"use strict\";\n\n/**\n * Datasource adapter factory.\n * @param {string} url database url\n * @param {number} [cacheSize] number of models to keep in cache\n * @param {*} DataSource base class that enables caching\n * @returns {import(\"./datasource\").default}\n */\nexport const DataSourceAdapterMongoDb = function (\n  url,\n  cacheSize,\n  DataSourceMongoDb\n) {\n  /**\n   * MongoDB adapter extends in-memory datasource to support caching.\n   * The cache is always updated first, which allows the system to run\n   * even when the database is offline.\n   */\n  class DataSourceMongoDbCustom extends DataSourceMongoDb {\n    constructor(datasource, factory, name) {\n      super(datasource, factory, name);\n      this.url = url;\n      this.cacheSize = cacheSize;\n    }\n  }\n\n  return DataSourceMongoDbCustom;\n};\n","\"use strict\";\n\nimport { Event } from \"./services/event-service\";\n\nexport class EventDispatcher {\n  constructor(adapter = Event) {\n    this.adapter = adapter;\n    this.subscriptions = new Map();\n  }\n\n  registerCallback(topic, callback) {\n    if (this.subscriptions.has(topic)) {\n      this.subscriptions.get(topic).push(callback);\n      return;\n    }\n    this.subscriptions.set(topic, [callback]);\n  }\n\n  async emitEvent(topic, message, method = \"notify\") {\n    await this.adapter[method](topic, message);\n  }\n\n  async init(method = \"listen\") {\n    function emitEvent(topic, message) {\n      this.emitEvent(topic, message);\n    }\n\n    // this.emitEvent(/Channel/, \"remoteRestart\");\n    await this.adapter[method](\n      /Channel/,\n      function ({ topic, message }) {\n        if (this.subscriptions.has(topic)) {\n          this.subscriptions\n            .get(topic)\n            .forEach(callback =>\n              callback({ message, emitEvent: emitEvent.bind(this) })\n            );\n        }\n      }.bind(this)\n    );\n  }\n}\n","\"use strict\";\n\nimport crypto from \"crypto\";\n\nexport function compose(...funcs) {\n  return function (initVal) {\n    return funcs.reduceRight((val, func) => func(val), initVal);\n  };\n}\n\nexport function composeAsync(...funcs) {\n  return function (initVal) {\n    return funcs.reduceRight(\n      (val, func) => val.then(func),\n      Promise.resolve(initVal)\n    );\n  };\n}\n\nconst passwd = process.env.ENCRYPTION_PWD;\nconst algo = \"aes-192-cbc\";\nconst key = crypto.scryptSync(String(passwd), \"salt\", 24);\nconst iv = Buffer.alloc(16, 0);\n\nexport function encrypt(text) {\n  const cipher = crypto.createCipheriv(algo, key, iv);\n  let encrypted = cipher.update(text, \"utf8\", \"hex\");\n  encrypted += cipher.final(\"hex\");\n  return encrypted;\n}\n\nexport function decrypt(cipherText) {\n  console.log(\"decrypt(%s)\", cipherText);\n  const decipher = crypto.createDecipheriv(algo, key, iv);\n  let decrypted = decipher.update(cipherText, \"hex\", \"utf8\");\n  decrypted += decipher.final(\"utf8\");\n  return decrypted;\n}\n\nexport function hash(data) {\n  return crypto.createHash(\"sha1\").update(data).digest(\"hex\");\n}\n\nexport function uuid() {\n  return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>\n    (c ^ (crypto.randomBytes(16)[0] & (15 >> (c / 4)))).toString(16)\n  );\n}\n\nexport function makeArray(v) {\n  return Array.isArray(v) ? v : [v];\n}\n\nexport function makeObject(prop) {\n  if (Array.isArray(prop)) {\n    return prop.reduce((p, c) => ({ ...p, ...c }));\n  }\n  return prop;\n}\n\n/**\n *\n * @param {Promise<{\n * ok:()=>any,\n *\n * }} promise\n * @returns\n */\nexport function async(promise) {\n  return promise\n    .then(result => ({\n      ok: true,\n      object: result,\n      asObject: () => makeObject(result),\n      asArray: () => makeArray(result),\n    }))\n    .catch(error => {\n      console.error(error);\n      return Promise.resolve({ ok: false, error });\n    });\n}\n","\"use strict\";\n\nexport function makeCustomerFactory({ uuid }) {\n  return function createCustomer({\n    firstName,\n    lastName,\n    shippingAddress,\n    creditCardNumber,\n    billingAddress = shippingAddress,\n    phone,\n    email,\n    userId,\n  } = {}) {\n    return Object.freeze({\n      customerId: uuid(),\n      firstName,\n      lastName,\n      creditCardNumber,\n      shippingAddress,\n      billingAddress,\n      phone,\n      email,\n      userId,\n    });\n  };\n}\n\nexport async function okToDelete(customer) {\n  try {\n    const orders = await customer.orders();\n    return orders.length > 0;\n  } catch (error) {\n    console.error({ func: okToDelete.name, error });\n    return true;\n  }\n}\n","\"use strict\";\n\n/**\n * @typedef {string} eventName\n */\n\n/**\n * @typedef {Object} Model\n * @property {string} Symbol_id - immutable/private uuid\n * @property {string} Symbol_modelName - immutable/private name\n * @property {string} Symbol_createTime - immutable/private createTime\n * @property {onUpdate} Symbol_onUpdate - immutable/private update function\n * @property {onDelete} Symbol_onDelete\n * @property {function(Object)} update - use this function to update model\n * specify changes in an object\n * @property {function()} toJSON - de/serialization logic\n * @property {function(eventName,function(eventName,Model):void)} addListener listen for domain events\n * @property {function(eventName,Model):Promise<void>} emit emit domain event\n * @property {function(function():Promise<Model>):Promise<Model>} [port] - when a\n * port is configured, the framework generates a function to invoke it. When data\n * arrives on the port, depending on the implementation, the port's adapter invokes\n * the callback specified in the port configuration, or as an argument to the port\n * function. The callback returns an updated Model, and control is returned to the\n * caller. Optionally, an event is fired to trigger the next port function to run\n * @property {function():Promise<any>} [relation] - when you configure a relation,\n * the framework generates a function that your code can call to run the query\n * @property {function(*):*} [command] - the framework will call any model method\n * you specify when passed as a parameter or query in an API call.\n */\n\n/**\n * @callback onUpdate called to handle model updates\n * @param {Model} model\n * @param {Object} changes\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @callback onDelete\n * @param {Model} model\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @callback validate called to handle model updates\n * @param {Model} model\n * @param {Object} changes\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @callback onLoad\n * @param {Model} savedModel rehydrated model\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @typedef {string} service - name of the service object to inject in adapter\n * @typedef {number} timeout - call to adapter will timeout after `timeout` milliseconds\n *\n * @typedef {{\n *  [x: string]: {\n *    service: service,\n *    timeout?: timeout,\n *    callback?: function({model: Model})\n *    errorCallback?: function({model: Model, port: string, error:Error}),\n *    timeoutCallback?: function({model: Model, port: string}),\n *    consumesEvent?:string,\n *    producesEvent?:string,\n *    type?:'inbound'|'outbound',\n *    disabled?: boolean\n *    adapter?: string\n *  }\n * }} ports - input/output ports for the domain\n *\n * @typedef {{\n *  [x: string]: {\n *    modelName:string,\n *    type:\"oneToMany\"|\"manyToOne\",\n *    foreignKey:any,\n *  }\n * }} relations - define related domain entities\n *\n * @typedef {Array<function({\n *  eventName:string,\n *  eventType:string,\n *  eventTime:string,\n *  modelName:string,\n *  model:Model\n * }):Promise<void>>} eventHandler - callbacks invoked to handle domain and\n * application events\n */\n\n/**\n *\n * @typedef {string} key\n * @typedef {*} value\n */\n\n/**\n * @typedef {{\n *  on: \"serialize\" | \"deserialize\",\n *  key: string | RegExp | \"*\" | (function(key,value):boolean)\n *  type: \"string\" | \"object\" | \"number\" | \"function\" | \"any\" | (function(key,value):boolean)\n *  value(key, value):value\n * }} serializer\n *\n * @typedef {{\n *  [x:string]: {\n *    allow:string|function(*):boolean|Array<string|function(*):boolean>\n *    deny:string|function(*):boolean|Array<string|function(*):boolean>\n *    type:\"role\"|\"relation\"|\"command\"\n *    desc?:string\n *  }\n * }} accessControlList\n *\n * @typedef {{\n *  [x: string]: {\n *    command:string|function(Model):Promise<any>,\n *    acl:accessControlList[]\n *  }\n * }} commands - configure functions to execute when specified in a\n * URL parameter or query of the auto-generate REST API\n */\n\n/**\n * @typedef {{\n *  [x: string]: {\n *    endpointUri: string,\n *    port:ports[p],\n *    callback: ({\n *      body:string,\n *      headers:{},\n *      params:{}}) => Promise<{\n *        body,status,headers\n *      }>\n *    })\n * }} endpoints\n */\n\n/**\n * @typedef {Object} ModelSpecification Specify model data and behavior\n * @property {string} modelName name of model (case-insenstive)\n * @property {string} endpoint URI reference (e.g. plural of `modelName`)\n * @property {function(...args): any} factory factory function that creates the model\n * @property {object} [dependencies] injected into the model for inverted control\n * @property {Array<import(\"./mixins\").functionalMixin>} [mixins] - use mixins\n * to implement domain logic, like input validation.\n * @property {onUpdate} [onUpdate] - Function called to handle update requests. Called\n * before save.\n * @property {onDelete} [onDelete] - Function called before deletion.\n * @property {validate} [validate] -\n * @property {ports} [ports] - input/output ports for the domain\n * @property {eventHandler[]} [eventHandlers] - callbacks invoked to handle application\n * events, e.g. CRUD events\n * @property {serializer[]} [serializers] - use for custom de/serialization of the model\n * when reading or writing to storage or network\n * @property {relations} [relations] - link related domain models\n * @property {commands} [commands] - define functions to execute when specified in a\n * URL parameter or query of the auto-generated REST API\n * @property {accessControlList} [accessControlList] - configure authorization\n * @property {endpoints} [endpoints] - additional custom API endpoints - specify inbound port\n * @property {{factory:import(\"../datasources/datasource-mongodb/\"),url:string,credentials?:string}} [datasource] - custom datasource\n * for this model. If not set, the default set by the server is used.\n *\n */\n\nimport GlobalMixins from \"./mixins\";\nimport makeAdapters from \"./make-adapters\";\n\n// Service dependencies\nimport * as services from \"../services-mock\";\nimport * as adapters from \"../adapters\";\n\n// Models\nimport * as modelSpecs from \"../config\";\n\nconst requiredProps = [\"modelName\", \"endpoint\", \"factory\"];\n\nfunction validateSpec(spec) {\n  const missing = requiredProps.filter(key => !spec[key]);\n  if (missing?.length > 0) {\n    throw new Error(`missing properties: ${missing} > ${Object.entries(spec)}`);\n  }\n}\n\n/**\n * @param {ModelSpecification} spec\n * @param {*} dependencies - services injected\n */\nfunction makeModel(spec) {\n  validateSpec(spec);\n\n  const mixins = spec.mixins || [];\n  const dependencies = spec.dependencies || {};\n\n  return {\n    ...spec,\n    mixins: mixins.concat(GlobalMixins),\n    dependencies: {\n      ...dependencies,\n      ...makeAdapters(spec.ports, adapters, services),\n    },\n  };\n}\n\nexport const models = Object.values(modelSpecs).map(spec => makeModel(spec));\n","\"use strict\";\n\nexport default function makeAdapters(ports, adapters, services) {\n  if (!ports || !adapters) {\n    return;\n  }\n  return Object.keys(ports)\n    .map(port => {\n      if (!adapters[port]) {\n        return;\n      }\n\n      try {\n        return {\n          [port]: adapters[port](services[ports[port].service]),\n        };\n      } catch (e) {\n        console.warn(e.message);\n      }\n    })\n    .reduce((p, c) => ({ ...p, ...c }));\n}\n","\"use strict\";\n\nimport { hash, encrypt, decrypt, compose } from \"../lib/utils\";\nimport util from \"util\";\n\n/**\n * Functional mixin created by `functionalMixinFactory`\n * @callback functionalMixin\n * @param {Object} o Object to compose\n * @returns {Object} Composed object\n */\n\n/**\n * Functional mixin factory - partial application - returns mixin function\n * @callback functionalMixinFactory\n * @param {*} mixinParams params for mixin function\n * @returns {functionalMixin}\n */\n\n/**\n * @typedef {import(\"../models/index\").Model} Model\n */\n\n/**\n * Private key to access previous version of the model\n */\nexport const prevmodel = Symbol(\"prevModel\");\n/**\n * private key to access validation config\n */\nexport const validations = Symbol(\"validations\");\n/**\n * Process mixin pre or post update\n */\nexport const mixinType = {\n  pre: Symbol(\"pre\"),\n  post: Symbol(\"post\"),\n};\n\n/**\n * Stored mixins - use private symbol as key to prevent overwrite\n */\nexport const mixinSets = {\n  [mixinType.pre]: Symbol(\"preUpdateMixins\"),\n  [mixinType.post]: Symbol(\"postUpdateMixins\"),\n};\n\n/**\n * Set of pre mixins\n */\nconst premixins = mixinSets[mixinType.pre];\n/**\n * Set of post mixins\n */\nconst postmixins = mixinSets[mixinType.post];\n\n/**\n * Apply any pre and post mixins and return the result.\n * @deprecated\n * @param {*} model - current model\n * @param {*} changes - object containing changes\n * @returns {import('.').Model} updated model\n */\nexport function processUpdate(model, changes) {\n  changes[prevmodel] = JSON.parse(JSON.stringify(model)); // keep history\n\n  const updates = model[premixins]\n    ? compose(...model[premixins].values())(changes)\n    : changes;\n\n  const updated = { ...model, ...updates };\n\n  return model[postmixins]\n    ? compose(...model[postmixins].values())(updated)\n    : updated;\n}\n\n/**\n * @deprecated\n * Store mixins for execution on update\n * @param {mixinType} type\n * run before changes are applied or afterward\n * @param {*} o  Object containing changes to apply (pre)\n * or new object after changes have been applied (post)\n * @param {string} name `Function.name`\n * @param {functionalMixin} cb mixin function\n */\nexport function updateMixins(type, o, name, cb) {\n  if (!mixinSets[type]) {\n    throw new Error(\"invalid mixin type\");\n  }\n\n  const mixinSet = o[mixinSets[type]] || new Map();\n\n  if (!mixinSet.has(name)) {\n    mixinSet.set(name, cb());\n\n    return {\n      ...o,\n      [mixinSets[type]]: mixinSet,\n    };\n  }\n  return o;\n}\n\n/**\n * bitmask for identifying events\n */\nconst eventMask = {\n  update: 1, //  0001 Update\n  create: 1 << 1, //  0010 Create\n  onload: 1 << 2, //  0100 Load\n};\n\nfunction handleUpdateEvent(model, updates, event) {\n  const isUpdate = eventMask.update & event;\n  const decrypted = isUpdate ? model.decrypt() : {};\n  return {\n    ...model,\n    ...updates,\n    ...decrypted,\n  };\n}\n\nfunction isObject(p) {\n  return p != null && typeof p === \"object\";\n}\n\nfunction containsUpdates(model, changes, event) {\n  if (eventMask.update & event) {\n    const changeList = Object.keys(changes);\n    if (changeList.length < 1) return false;\n\n    if (\n      changeList.every(\n        k => model[k] && util.isDeepStrictEqual(changes[k], model[k])\n      )\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Run validation functions enabled for a given event.\n * @param {Model} model - the composed object\n * @param {*} changes - object containing changes\n * @param {Number} event - Indicates what event is occuring:\n * 1st bit turned on means update, 2nd bit create, 3rd load,\n * see `eventMask`.\n */\nexport function validateModel(model, changes, event) {\n  // if there are no changes, and the event is an update, return\n  if (!containsUpdates(model, changes, event)) {\n    return model;\n  }\n\n  // keep a history of the last saved model\n  const input = { ...changes, [prevmodel]: JSON.parse(JSON.stringify(model)) };\n\n  // Validate just the input data\n  const updates = model[validations]\n    .filter(v => v.input & event)\n    .sort((a, b) => a.order - b.order)\n    .map(v => model[v.name].apply(input))\n    .reduce((p, c) => ({ ...p, ...c }), input);\n\n  const updated = { ...model, ...updates };\n\n  // Validate the updated model\n  return updated[validations]\n    .filter(v => v.output & event)\n    .sort((a, b) => a.order - b.order)\n    .map(v => updated[v.name]())\n    .reduce((p, c) => ({ ...p, ...c }), updated);\n}\n\n/**\n * Specify when validations run.\n */\nconst enableValidation = (() => {\n  const onUpdate = enableEvent(true, false, false);\n  const onCreate = enableEvent(false, true, false);\n  const onCreateAndUpdate = enableEvent(true, true, false);\n  const onLoad = enableEvent(false, false, true);\n  const onAll = enableEvent(true, true, true);\n  const never = enableEvent(false, false, false);\n  return {\n    /**\n     * Validation runs on update.\n     */\n    onUpdate,\n    /**\n     * Validation runs on create.\n     */\n    onCreate,\n    /**\n     * Validation runs on both create and update.\n     */\n    onCreateAndUpdate,\n    /**\n     * Validation runs on load.\n     */\n    onLoad,\n    /**\n     * Validation runs on all events.\n     */\n    onAll,\n    /**\n     * Validation runs on zero events (disabled).\n     */\n    never,\n  };\n})();\n\n/**\n * Enable validation to run on specific events.\n * @param {boolean} onUpdate - whether or not to run the validation on update.\n * Defaults to `true`.\n * @param {boolean} onCreate - whether or not to run the validation on create.\n * Defaults to `true`.\n * @param {boolean} onLoad - whether or not to run the validation when\n * the object is being loaded into memory after being deserialized.\n * Defaults to `false`.\n */\nfunction enableEvent(onUpdate = true, onCreate = true, onLoad = false) {\n  let enabled = 0;\n\n  if (onUpdate) {\n    enabled |= eventMask.update;\n  }\n  if (onCreate) {\n    enabled |= eventMask.create;\n  }\n  if (onLoad) {\n    enabled |= eventMask.onload;\n  }\n  return enabled;\n}\n\n/**\n * Add a validation function to be called for a given event.\n * @typedef {object} validationConfig\n * @property {*} o - the composed object\n * @property {string} name - name of function to run\n * @property {number} input - \"input\" validations run against\n * the data passed by the caller in the request. Use `enableValidation`\n * to provide a value for this param.\n * @property {number} output - \"output\" functions run against the\n * model after the changes have been applied.\n * @property {number} order - order in which validation runs\n * @param {validationConfig} param0\n */\nfunction addValidation({ model, name, input = 0, output = 0, order = 50 }) {\n  const config = model[validations] || [];\n\n  if (config.some(v => v.name === name)) {\n    return model;\n  }\n\n  return {\n    ...model,\n    validateModel,\n    [validations]: [...config, { name, input, output, order }],\n  };\n}\n\n/**\n * Resolve keys:\n * If the value includes an array, flatten it, then for each element:\n * If the value is \"*\", return all keys of the object.\n * If the value is a function, execute it to get a dynamic key or key list.\n * If the value is a RegExp, test it to get dynamic key list.\n * If any of the above produce an array of keys, flatten it.\n * @param {*} o - Object to compose\n * @param  {Array<string | function(*):string>} propKeys -\n * Names (or functions that return names) of properties\n * @returns {string[]} list of (resolved) property keys\n */\nfunction parseKeys(o, ...propKeys) {\n  const keys = propKeys.flat().map(function (k) {\n    if (typeof k === \"function\") return k(o);\n    if (k instanceof RegExp) return Object.keys(o).filter(key => k.test(key));\n    if (k === \"*\") return Object.keys(o);\n    return k;\n  });\n  return keys.flat();\n}\n\n/**\n * Encrypt properties. Properties remain encrypted indefinitely, and\n * must be explicitly decrypted as needed, e.g. reading values in memory,\n * from storage, serializing and sending to an external system.\n * @param  {Array<string | function(*):string>} propKeys -\n * Names (or functions that return names) of properties to encrypt\n * @returns {functionalMixin} mixin function\n */\nexport const encryptProperties = (...propKeys) => o => {\n  const keys = parseKeys(o, ...propKeys);\n\n  const encryptProps = obj => {\n    return keys\n      .map(key => (obj[key] ? { [key]: encrypt(obj[key]) } : {}))\n      .reduce((p, c) => ({ ...p, ...c }));\n  };\n\n  return {\n    encryptProperties() {\n      return encryptProps(this);\n    },\n\n    ...addValidation({\n      model: o,\n      name: encryptProperties.name,\n      input: enableValidation.onUpdate,\n      output: enableValidation.onCreate,\n      order: 99,\n    }),\n\n    decrypt() {\n      return keys\n        .map(key => (this[key] ? { [key]: decrypt(this[key]) } : {}))\n        .reduce((p, c) => ({ ...p, ...c }));\n    },\n  };\n};\n\n/**\n * Prevent properties from being modified.\n * Accepts a property name or a function that returns a property name.\n * @param  {Array<string | function(*):string | RegExp>} propKeys - names of properties to freeze\n */\nexport const freezeProperties = (...propKeys) => o => {\n  const preventUpdates = obj => {\n    const keys = parseKeys(obj, ...propKeys);\n\n    const sideEffects = Object.keys(obj).filter(key => keys.includes(key));\n    if (sideEffects?.length > 0) {\n      throw new Error(`cannot update readonly properties: ${sideEffects}`);\n    }\n  };\n\n  return {\n    freezeProperties() {\n      preventUpdates(this);\n    },\n\n    ...addValidation({\n      model: o,\n      name: freezeProperties.name,\n      input: enableValidation.onUpdate,\n      order: 20,\n    }),\n  };\n};\n\n/**\n * Enforce required fields.\n * @param {Array<string | function(*):string | RegExp>} propKeys -\n * required property key names - can be a function or regex\n * that returns the property key names\n */\nexport const requireProperties = (...propKeys) => o => {\n  const keys = parseKeys(o, ...propKeys);\n\n  function requireProps(obj) {\n    const missing = keys.filter(key => key && !obj[key]);\n    if (missing?.length > 0) {\n      throw new Error(`missing required properties: ${missing}`);\n    }\n  }\n  return {\n    requireProperties() {\n      requireProps(this);\n    },\n\n    ...addValidation({\n      model: o,\n      name: requireProperties.name,\n      output: enableValidation.onCreateAndUpdate,\n      order: 75,\n    }),\n  };\n};\n\n/**\n * Hash passwords.\n * @param {*} hash hash algorithm\n * @param  {Array<string | function(*):string | RegExp>} propKeys name of password props\n */\nexport const hashPasswords = (...propKeys) => o => {\n  const keys = parseKeys(o, ...propKeys);\n\n  function hashPwds(obj) {\n    return keys\n      .map(key => (obj[key] ? { [key]: hash(obj[key]) } : {}))\n      .reduce((p, c) => ({ ...p, ...c }));\n  }\n\n  return {\n    hashPasswords() {\n      return hashPwds(this);\n    },\n\n    ...addValidation({\n      model: o,\n      name: hashPasswords.name,\n      input: enableValidation.onUpdate,\n      output: enableValidation.onCreate,\n      order: 80,\n    }),\n  };\n};\n\nconst internalPropList = [];\n\n/**\n * Reject unknown properties in user input. Allow only approved keys.\n * @param  {...any} propKeys\n */\nexport const allowProperties = (...propKeys) => o => {\n  function rejectUnknownProps() {\n    const keys = parseKeys(o, ...propKeys);\n\n    const allowList = keys.concat(internalPropList);\n    const unknownProps = Object.keys(o).filter(key => !allowList.includes(key));\n\n    if (unknownProps?.length > 0) {\n      throw new Error(`invalid properties: ${unknownProps}`);\n    }\n  }\n\n  return {\n    rejectUnknownProperties() {\n      return rejectUnknownProps(this);\n    },\n\n    ...addValidation({\n      model: o,\n      name: \"rejectUnknownProperties\",\n      input: enableValidation.onUpdate,\n      order: 15,\n    }),\n  };\n};\n\n/**\n * Test regular expressions\n */\nexport const RegEx = {\n  email: /^(.+)@(.+){2,}\\.(.+){2,}$/,\n  ipv4Address: /^([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])$/,\n  ipv6Address: /^((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*::((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*|((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4})){7}$/,\n  phone: /^[1-9]\\d{2}-\\d{3}-\\d{4}/,\n  creditCard: /^(?:4[0-9]{12}(?:[0-9]{3})?|[25][1-7][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/,\n  ssn: /^(?!666|000|9\\\\d{2})\\\\d{3}-(?!00)\\\\d{2}-(?!0{4})\\\\d{4}$/,\n  /**\n   * Allow caller to pass a keyword that refers to one of the regex above\n   * @param {regexType} expr\n   * @param {*} val\n   */\n  test(expr, val) {\n    const _expr =\n      Object.keys(this).includes(expr) && this[expr] instanceof RegExp\n        ? this[expr]\n        : expr;\n    return _expr.test(val);\n  },\n};\n\n/**\n * @callback isValid\n * @param {Object} o - the property owner\n * @param {*} propVal - the property value\n * @returns {boolean} - true if valid\n *\n * @typedef {'email'|'phone'|'ipv4Address'|'ipv6Address'|'creditCard'|'ssn'|RegExp} regexType\n *\n * @typedef {{\n *  propKey:string,\n *  isValid?:isValid,\n *  values?:any[],\n *  regex?:regexType,\n *  maxlen?:number\n *  maxnum?:number\n *  typeof?:string\n *  unique?:{ encrypted:boolean }\n * }} validation\n */\n\nfunction evaluateUniqueness(v, o, propVal) {\n  const compareVal = v.unique.encrypted ? encrypt(propVal) : propVal;\n  return o.listSync({ [v.propKey]: compareVal }).length < 1;\n}\n\n/**\n * Run validation tests\n */\nconst Validator = {\n  tests: {\n    isValid: (v, o, propVal) => v.isValid(o, propVal),\n    values: (v, o, propVal) => v.values.includes(propVal),\n    regex: (v, o, propVal) => RegEx.test(v.regex, propVal),\n    typeof: (v, o, propVal) => v.typeof === typeof propVal,\n    maxnum: (v, o, propVal) => v.maxnum + 1 > propVal,\n    maxlen: (v, o, propVal) => v.maxlen + 1 > propVal.length,\n    unique: (v, o, propVal) => evaluateUniqueness(v, o, propVal),\n  },\n  /**\n   * Returns true if tests pass.\n   * @param {validation} v validation config\n   * @param {Object} o object to compose\n   * @param {*} propVal value of property to validate\n   * @returns {boolean} true if tests pass\n   */\n  isValid(v, o, propVal) {\n    return Object.keys(this.tests).every(key => {\n      if (v[key]) {\n        // the test `key` is specified, run it\n        return this.tests[key](v, o, propVal);\n      }\n      return true;\n    });\n  },\n};\n\n/**\n * Verify a property value is a member of a list,\n * is unique within a set of model instances,\n * is of a certain length, size or type,\n * matches a regular expression,\n * or satisfies a custom validation function.\n * @param {validation[]} validations\n */\nexport const validateProperties = validations => o => {\n  function validate(obj) {\n    const invalid = validations.filter(v => {\n      const propVal = obj[v.propKey];\n\n      if (!propVal) {\n        return false;\n      }\n      return !Validator.isValid(v, obj, propVal);\n    });\n\n    if (invalid?.length > 0) {\n      throw new Error(`invalid value for ${[...invalid.map(v => v.propKey)]}`);\n    }\n  }\n\n  return {\n    validateProperties() {\n      validate(this);\n    },\n\n    ...addValidation({\n      model: o,\n      name: validateProperties.name,\n      input: enableValidation.onUpdate,\n      output: enableValidation.onCreate,\n      order: 90,\n    }),\n  };\n};\n\n/**\n * @callback updaterFn\n * @param {Object} o\n * @param  {*} propVal\n * @returns {Object} object with updated properties\n *\n * @typedef {{\n * propKey: string,\n * update: updaterFn\n * }} updater\n */\n\n/**\n * Respond to property updates by updating addtional (dependent) properties as needed.\n * @param {updater[]} updaters\n */\nexport const updateProperties = updaters => o => {\n  function updateProps(obj) {\n    const updates = updaters.filter(u => obj[u.propKey]);\n\n    if (updates?.length > 0) {\n      return updates\n        .map(u => u.update(o, obj[u.propKey]))\n        .reduce((p, c) => ({ ...p, ...c }));\n    }\n  }\n\n  return {\n    updateProperties() {\n      return updateProps(this);\n    },\n\n    ...addValidation({\n      model: o,\n      name: updateProperties.name,\n      input: enableValidation.onUpdate,\n      order: 35,\n    }),\n  };\n};\n\n/**\n * Set a validation that invokes a port. The port must be configured\n * in the `ModelSpecification`.\n * @param {string} fn - name of port (as it appears in the ModelSpec)\n * @param {boolean} onCreate - invoke on create\n * @param {boolean} onUpdate - invoke on update\n * @param  {...any} args - pass arguments\n */\nexport const invokePort = (fn, onCreate, onUpdate, ...args) => async o => {\n  return {\n    ...o,\n    invokePort() {\n      console.log({ func: \"invokePort\", fn, args });\n      return this[fn](...args).then(o => o);\n    },\n\n    ...addValidation({\n      model: o,\n      name: \"invokePort\",\n      output: enableValidation.onUpdate,\n      order: 85,\n    }),\n  };\n};\n\n/**\n * Set a validation that calls a model method or provided function.\n * @param {string|function(Model, ...any):Promise<any>} fn - callback function\n * or name of method to executee\n * @param {boolean} onCreate - invoke on create\n * @param {boolean} onUpdate - invoke on update\n * @param  {...any} args - pass arguments to the method/function\n * @return {Model}\n */\nexport const execMethod = (fn, onCreate, onUpdate, ...args) => async o => {\n  const functionType = {\n    function: (fn, obj, ...args) => fn(obj, ...args).then(o => o),\n    string: (fn, obj, ...args) => obj[fn](...args).then(o => o),\n  };\n\n  return {\n    ...o,\n    async execMethod() {\n      const model = await functionType[typeof fn](fn, this, ...args);\n      return model;\n    },\n\n    ...addValidation({\n      model: o,\n      name: \"execMethod\",\n      output: enableValidation.onUpdate,\n      order: 40,\n    }),\n  };\n};\n\n/**\n * Create a method on a model.\n * @param {*} fn\n * @param  {...any} args\n */\nexport const createMethod = (fn, ...args) => o => {\n  return {\n    ...o,\n    [fn.name]: () => fn(...args),\n  };\n};\n\n/**\n * Check the value of the property before returning its key.\n * @param {*} propKey\n * @param {regexType} expr\n * @returns {function(any):any} dynamic property func\n */\nexport const withValidFormat = (propKey, expr) => o => {\n  if (o[propKey] && !RegEx.test(expr, o[propKey])) {\n    throw new Error(`invalid ${propKey}`);\n  }\n  return propKey;\n};\n\n/**\n *\n * @param {string} value\n * @param {regexType} expr\n */\nexport const checkFormat = (value, expr) => {\n  if (value && !RegEx.test(expr, value)) {\n    const x = expr instanceof RegExp ? value : expr;\n    throw new Error(`${x} invalid`);\n  }\n};\n\n/**\n * Implement GDPR encryption requirement across models\n */\nexport const encryptPersonalInfo = encryptProperties(\n  /^last.*Name$|^surname$|^family.*Name$/i,\n  /^shipping.*Address$/i,\n  /^billing.*Address$/i,\n  /^home.*Address$/i,\n  /email|e-mail/i,\n  /^phone$|^home.*phone$/i,\n  /^mobile$|^mobile.*number$|^cell.*number$/i,\n  /^credit.*Card/i,\n  /^cvv$/i,\n  /^ssn$|^socialSecurity/i,\n  /^encrypted/i\n);\n\n/**\n * Global mixins\n */\nconst GlobalMixins = [encryptPersonalInfo];\n\nexport default GlobalMixins;\n","\"use strict\";\n\nimport { EventDispatcher } from \"./event-dispatcher\";\nimport { uuid } from \"./lib/utils\";\n\nexport const Registry = {\n  eventNames: {\n    shipOrder: \"orderShipped\",\n    trackShipment: \"outForDelivery\",\n    verifyDelivery: \"deliveryVerified\",\n  },\n\n  sendEvent({ emitEvent, topic, eventData, eventSource, eventName }) {\n    console.log(\"Sending event...\");\n    console.log({ emitEvent, topic, eventData, eventSource, eventName });\n    setTimeout(async () => {\n      await emitEvent(\n        topic,\n        JSON.stringify({\n          eventData,\n          eventName,\n          eventTime: new Date().toUTCString(),\n          eventType: \"commandResponse\",\n          eventSource: eventSource,\n        })\n      );\n    }, 5000);\n  },\n\n  generateShippingEventData(event, externalId) {\n    const trackingId = uuid();\n    const shipmentId = trackingId;\n    const proofOfDelivery = `http://shipping.service.com?proof=${trackingId}`;\n    const eventData = { externalId };\n    if (event.eventName === \"shipOrder\") {\n      return { ...eventData, shipmentId };\n    }\n    if (event.eventName === \"trackShipment\") {\n      return { ...eventData, trackingId, trackingStatus: \"outForDelivery\" };\n    }\n    if (event.eventName === \"verifyDelivery\") {\n      return { ...eventData, proofOfDelivery };\n    }\n  },\n\n  generateShippingMessage(emitEvent, event, externalId) {\n    return {\n      emitEvent,\n      topic: event.eventData.commandResp,\n      eventData: this.generateShippingEventData(event, externalId),\n      eventName: this.eventNames[event.eventName],\n      eventSource: \"shippingService\",\n    };\n  },\n\n  inventoryCallbackFactory() {\n    function inventoryCallback({ message, emitEvent }) {\n      const event = JSON.parse(message);\n      const warehouseAddress = /*null;*/ \"1234 warehouse dr, dock 2\";\n      const externalId = event.eventData.commandArgs.externalId;\n      const eventName = /*'outOfStock';*/ \"orderPicked\";\n      this.sendEvent({\n        emitEvent,\n        topic: event.eventData.replyChannel,\n        eventName,\n        eventData: { warehouse_addr: warehouseAddress, externalId },\n        eventSource: \"inventoryService\",\n      });\n    }\n    return inventoryCallback.bind(this);\n  },\n\n  shippingCallbackFactory() {\n    function shippingCallback({ message, emitEvent }) {\n      const event = JSON.parse(message);\n      const externalId = event.eventData.commandArgs.externalId;\n      const _message = this.generateShippingMessage(\n        emitEvent,\n        event,\n        externalId\n      );\n      this.sendEvent(_message);\n\n      if (event.eventName === \"trackShipment\") {\n        const eventData = {\n          ..._message.eventData,\n          trackingStatus: \"orderDelivered\",\n        };\n        setTimeout(\n          () =>\n            this.sendEvent({\n              ..._message,\n              eventData,\n              eventName: \"orderDelivered\",\n            }),\n          7000\n        );\n      }\n    }\n    return shippingCallback.bind(this);\n  },\n};\n\nconst dispatcher = new EventDispatcher();\n\ndispatcher.registerCallback(\n  \"inventoryChannel\",\n  Registry.inventoryCallbackFactory()\n);\n\ndispatcher.registerCallback(\n  \"shippingChannel\",\n  Registry.shippingCallbackFactory()\n);\n\nexport default dispatcher;\n","\"use strict\";\n\nexport const Address = {\n  /**\n   *\n   * @param {string} address US street address\n   */\n  async validateAddress(address) {\n    console.log(\"test validating address...\");\n\n    if (!address) {\n      throw new Error(\"no address provided\");\n    }\n\n    return address;\n  },\n\n};\n","\"use strict\";\n\nimport { EventDispatcher } from \"../event-dispatcher\";\nimport { Registry } from \"../service-registry\";\n\nconst shippingChannel = \"shippingChannel\";\nconst inventoryChannel = \"inventoryChannel\";\n\nconst callbacks = [];\nconst responses = [];\nconst topics = {\n  [shippingChannel]: /shipping/,\n  [inventoryChannel]: /inventory/,\n};\n\nexport function handleEvents(req, res) {\n  const message = JSON.stringify(req.body);\n  const topicName = Object.keys(topics).find(k => topics[k].test(message));\n  if (topicName) {\n    console.log({\n      func: handleEvents.name,\n      msg: \"found topic\",\n      topicName,\n      message,\n      cb: callbacks,\n    });\n\n    callbacks.forEach(callback => {\n      console.log({ name: callback.name, code: callback.toString() });\n      callback({ topicName, message });\n    });\n    console.log(responses);\n    responses.reduceRight(response => res.send(response), \"response\");\n  }\n}\n\nconst Event = {\n  topics: /Channel/,\n  listening: false,\n\n  listen(topic, callback) {\n    callbacks.push(callback);\n  },\n\n  notify(topic, message) {\n    responses.push(message);\n  },\n};\n\nconst dispatcher = new EventDispatcher(Event);\n\ndispatcher.registerCallback(\n  inventoryChannel,\n  Registry.inventoryCallbackFactory()\n);\n\ndispatcher.registerCallback(\n  shippingChannel,\n  Registry.shippingCallbackFactory()\n);\n\ndispatcher.init();\n","export * from \"./address-service\";\nexport * from \"./payment-service\";\nexport * from \"./shipping-service\";\nexport * from \"./event-service\";\nexport * from \"./inventory-service\";\n","\"use strict\";\n\nimport { Event } from \"../services/event-service\";\n\nfunction sendEvent({ eventData, eventName }) {\n  setTimeout(async () => {\n    await Event.notify(\n      \"orderChannel\",\n      JSON.stringify({\n        eventData,\n        eventName,\n        eventType: \"CommandResponse\",\n        eventTime: new Date().toUTCString(),\n        eventSource: \"Inventory\",\n      })\n    );\n  }, 5000);\n}\n\nexport const Inventory = {\n  async pickOrder({ externalId, lineItems }) {\n    console.log(\"inventory items\");\n    console.log(lineItems);\n    const pickupAddress = \"1234 warehouse dr, dock2\";\n    sendEvent({\n      eventName: \"orderPicked\",\n      eventData: { pickupAddress, externalId },\n    });\n  },\n};\n","\"use strict\";\n\n/**\n * @callback authorizePaymentType\n * @param {string} id\n * @param {number} amount\n * @param {string} source_id\n * @param {string} customer_id\n * @param {boolean} [autocomplete]\n * @returns {Promise<string>}\n */\n\n/**\n * @typedef PaymentService\n * @property {authorizePaymentType} authorizePayment\n * @property {function()} completePayment\n * @property {function()} refundPayment\n */\n\n// import { Client, Environment, ApiError } from \"square\";\n\n// const client = new Client({\n//   environment: Environment.Sandbox,\n//   accessToken: process.env.SQUARE_ACCESS_TOKEN,\n// });\n\nexport const Payment = {\n  /**\n   * @type {authorizePaymentType}\n   * @param {*} id\n   * @param {*} amount\n   * @param {*} source_id\n   * @param {*} customer_id\n   * @param {*} autocomplete\n   * @param {*} currency\n   */\n  async authorizePayment(\n    id,\n    amount,\n    source_id,\n    customer_id,\n    autocomplete = false,\n    currency = \"USD\"\n  ) {\n    console.log(\"mock payment service called\");\n    const payload = {\n      idempotency_key: id,\n      amount_money: {\n        amount,\n        currency,\n      },\n      source_id,\n      autocomplete,\n      customer_id,\n      location_id: \"XK3DBG77NJBFX\",\n      reference_id: \"123456\",\n      note: \"Brief description\",\n      app_fee_money: {\n        amount: 10,\n        currency: \"USD\",\n      },\n    };\n    /*\n    const bodyAmountMoney = {};\n    bodyAmountMoney.amount = 200;\n    bodyAmountMoney.currency = \"USD\";\n\n    const bodyTipMoney = {};\n    bodyTipMoney.amount = 198;\n    bodyTipMoney.currency = \"CHF\";\n\n    const bodyAppFeeMoney = {};\n    bodyAppFeeMoney.amount = 10;\n    bodyAppFeeMoney.currency = \"USD\";\n\n    const body = {\n      sourceId: \"ccof:uIbfJXhXETSP197M3GB\",\n      idempotencyKey: \"4935a656-a929-4792-b97c-8848be85c27c\",\n      amountMoney: bodyAmountMoney,\n    };\n\n    body.tipMoney = bodyTipMoney;\n    body.appFeeMoney = bodyAppFeeMoney;\n    body.delayDuration = \"delay_duration6\";\n    body.autocomplete = true;\n    body.orderId = \"order_id0\";\n    body.customerId = \"VDKXEEKPJN48QDG3BGGFAK05P8\";\n    body.locationId = \"XK3DBG77NJBFX\";\n    body.referenceId = \"123456\";\n    body.note = \"Brief description\";\n\n    // try {\n    //   const {\n    //     result,\n    //     ...httpResponse\n    //   } = await client.paymentsApi.createPayment(body);\n    //   // Get more response info...\n    //   // const { statusCode, headers } = httpResponse;\n    // } catch (error) {\n    //   if (error instanceof ApiError) {\n    //     const errors = error.result;\n    //     // const { statusCode, headers } = error;\n    //   }\n    // }\n    */\n    return \"1234\";\n  },\n\n  /*\n  const response ={\n  \"payment\": {\n    \"id\": \"GQTFp1ZlXdpoW4o6eGiZhbjosiDFf\",\n    \"created_at\": \"2019-07-10T13:23:49.154Z\",\n    \"updated_at\": \"2019-07-10T13:23:49.446Z\",\n    \"amount_money\": {\n      \"amount\": 200,\n      \"currency\": \"USD\"\n    },\n    \"app_fee_money\": {\n      \"amount\": 10,\n      \"currency\": \"USD\"\n    },\n    \"total_money\": {\n      \"amount\": 200,\n      \"currency\": \"USD\"\n    },\n    \"status\": \"COMPLETED\",\n    \"source_type\": \"CARD\",\n    \"card_details\": {\n      \"status\": \"CAPTURED\",\n      \"card\": {\n        \"card_brand\": \"VISA\",\n        \"last_4\": \"1111\",\n        \"exp_month\": 7,\n        \"exp_year\": 2026,\n        \"fingerprint\": \"sq-1-TpmjbNBMFdibiIjpQI5LiRgNUBC7u1689i0TgHjnlyHEWYB7tnn-K4QbW4ttvtaqXw\",\n        \"card_type\": \"DEBIT\",\n        \"prepaid_type\": \"PREPAID\",\n        \"bin\": \"411111\"\n      },\n      \"entry_method\": \"ON_FILE\",\n      \"cvv_status\": \"CVV_ACCEPTED\",\n      \"avs_status\": \"AVS_ACCEPTED\",\n      \"auth_result_code\": \"nsAyY2\",\n      \"statement_description\": \"SQ *MY MERCHANT\"\n    },\n    \"location_id\": \"XTI0H92143A39\",\n    \"order_id\": \"m2Hr8Hk8A3CTyQQ1k4ynExg92tO3\",\n    \"reference_id\": \"123456\",\n    \"note\": \"Brief description\",\n    \"customer_id\": \"RDX9Z4XTIZR7MRZJUXNY9HUK6I\",\n    \"receipt_number\": \"GQTF\",\n    \"receipt_url\": \"https://squareup.com/receipt/preview/GQTFp1ZlXdpoW4o6eGiZhbjosiDFf\"\n  }\n}\n  /*\n{\n  \"errors\": [\n    {\n      \"code\": \"VALUE_EMPTY\",\n      \"detail\": \"Field must not be blank\",\n      \"field\": \"source_id\",\n      \"category\": \"INVALID_REQUEST_ERROR\"\n    },\n    {\n      \"code\": \"VALUE_EMPTY\",\n      \"detail\": \"Field must not be blank\",\n      \"field\": \"idempotency_key\",\n      \"category\": \"INVALID_REQUEST_ERROR\"\n    },\n    {\n      \"code\": \"MISSING_REQUIRED_PARAMETER\",\n      \"detail\": \"Field must be set\",\n      \"field\": \"amount_money\",\n      \"category\": \"INVALID_REQUEST_ERROR\"\n    }\n  ]\n}\n  */\n\n  async completePayment(model) {\n    console.log(\"REAL completing payment: %s\", model.orderNo);\n    return \"1234\";\n  },\n\n  async refundPayment(model) {\n    console.log(\"REAL refunding payment: %s\", model.orderNo);\n  },\n};\n","\"use strict\";\n\n/**\n * @typedef {import('../adapters/event-adapter').EventMessage} EventMessage\n */\n\n/**\n * @typedef {import('../adapters/event-adapter').CommandEvent} CommandEvent\n */\n\n/**\n * @callback shipOrder\n * @param {string} shipTo\n * @param {string} shipFrom\n * @param {string} lineItems\n * @param {string} signature\n * @param {string} externalId\n * @param {string} requester\n * @param {string} respondOn\n * @returns {EventMessage}\n */\n\n/**\n * @callback trackShipment\n * @param {string} shipmentId\n * @param {string} externalId\n * @param {string} requester\n * @param {string} respondOn\n * @returns {EventMessage}\n */\n\n/**\n * @typedef {string} functionName\n */\n\n/**\n * @typedef {Object} shippingService formats and parses shipping event messages\n * @property {string} serviceName - programmatic service name in eventSource/Target\n * @property {string} topic - event topic \"shippingChannel\" when sending messasges\n * @property {shipOrder} shipOrder - format event message requesting shipping label and pickup of order\n * @property {trackShipment} trackShipment - report on location/status of parcel\n * @property {function():EventMessage} verifyDelivery - ensure customer recieved parcel\n * @property {function():EventMessage} returnShipment - return to sender if refunding\n * @property {function(functionName,EventMessage):{[key]:string}} getPayload - extract payload\n */\n\nfunction createEventMessage({ requester, service, type, name, id, data }) {\n  return {\n    eventSource: requester,\n    eventTarget: service,\n    eventType: type,\n    eventName: name,\n    eventTime: new Date().getTime(),\n    eventUuid: id,\n    eventData: data,\n  };\n}\n\nfunction createCommandEvent(name, topic, args) {\n  return {\n    commandName: name,\n    commandResp: topic,\n    commandArgs: { ...args },\n  };\n}\n\n/**\n * Shipping service events\n * @type {shippingService}\n */\nexport const Shipping = {\n  serviceName: \"shippingService\",\n  topic: \"shippingChannel\",\n\n  /**\n   *\n   * @param {*} param0\n   * @returns {shipMessage}\n   */\n  shipOrder({\n    shipTo,\n    shipFrom,\n    lineItems,\n    signature,\n    externalId,\n    requester,\n    respondOn,\n  }) {\n    return createEventMessage({\n      requester,\n      service: this.serviceName,\n      type: \"command\",\n      name: this.shipOrder.name,\n      id: externalId,\n      data: createCommandEvent(this.shipOrder.name, respondOn, {\n        shipTo,\n        shipFrom,\n        lineItems,\n        signature,\n        externalId,\n      }),\n    });\n  },\n\n  /**\n   *\n   * @param {*} param0\n   * @returns {EventMessage}\n   */\n  trackShipment({ externalId, shipmentId, trackingId, requester, respondOn }) {\n    return createEventMessage({\n      requester,\n      service: this.serviceName,\n      type: \"command\",\n      name: this.trackShipment.name,\n      id: externalId,\n      data: createCommandEvent(this.trackShipment.name, respondOn, {\n        externalId,\n        shipmentId,\n        trackingId,\n      }),\n    });\n  },\n\n  /**\n   *\n   * @param {*} param0\n   * @returns {EventMessage}\n   */\n  verifyDelivery({ requester, respondOn, trackingId, externalId }) {\n    return createEventMessage({\n      requester,\n      service: this.serviceName,\n      type: \"command\",\n      name: this.verifyDelivery.name,\n      id: externalId,\n      data: createCommandEvent(this.verifyDelivery.name, respondOn, {\n        externalId,\n        trackingId,\n      }),\n    });\n  },\n\n  returnShipment({ requester, respondOn, shipmentId, externalId }) {\n    return createEventMessage({\n      requester,\n      service: this.serviceName,\n      type: \"command\",\n      id: externalId,\n      name: this.returnShipment.name,\n      data: createCommandEvent(this.returnShipment, respondOn, {\n        shipmentId,\n        externalId,\n      }),\n    });\n  },\n\n  getPayload(func, event) {\n    const payloads = {\n      [this.shipOrder.name]: {\n        shipmentId: event.eventData.shipmentId,\n      },\n      [this.trackShipment.name]: {\n        trackingId: event.eventData.trackingId,\n        trackingStatus: event.eventData.trackingStatus,\n      },\n      [this.verifyDelivery.name]: {\n        proofOfDelivery: event.eventData.proofOfDelivery,\n      },\n    };\n    return payloads[func];\n  },\n\n  getProperty(event, key) {\n    return event.eventData[key];\n  },\n};\n"],"sourceRoot":""}